#!/usr/bin/env node

/* gloabl require */
// see: https://github.com/onedesign/express-socketio-tutorial
const app = require('../app').app
const debug = require('debug')('homeless-alarm:server')

function normalizePort(val) {
  const port = parseInt(val, 10)
  if (isNaN(port)) { return val }
  if (port >= 0) { return port }
  return false
}

const port = normalizePort(process.env.PORT || '3000')
app.set('port', port)

const server = require('../app').server

function onError(error) {
  if (error.syscall !== 'listen') { throw error }

  const bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`

  switch (error.code) {
    case 'EACCES':
      debug(`${bind} requires elevated privileges`)
      process.exit(1)
      break
    case 'EADDRINUSE':
      debug(`${bind} is already in use`)
      process.exit(1)
      break
    default:
      throw error
  }
}

function onListening() {
  const addr = server.address()
  debug(`http://127.0.0.1:${addr.port}`)
}

server.listen(port)
server.on('error', onError)
server.on('listening', onListening)

